import csv
import sys
import urllib
from itertools import batched
from typing import Optional


def main(
    names_file: str,
    images_file: str,
    version: Optional[str] = None,
    columns: int = 8,
) -> None:
    """
    Generate a Markdown page with all Soul Knight weapons, names and images
    from CSV files generated by sk_weapons.py.

    :param names_file: String path to the weapons CSV file
    :type names_file: str
    :param images_file: String path to the images CSV file
    :type images_file: str
    :param version: Optional version of the game, defaults to None
    :type version: Optional[str], optional
    :param columns: Amount of columns per row, defaults to 8
    :type columns: int, optional
    """
    weapons: dict[str, list[str]] = {}
    images: dict[str, list[str]] = {}

    with open(names_file, mode="r", encoding="utf-8") as fp:
        reader = csv.reader(fp)
        for category in next(reader):
            weapons[category] = []
        for row in reader:
            for category, item in zip(weapons.keys(), row):
                if item:
                    weapons[category].append(item)

    with open(images_file, mode="r", encoding="utf-8") as fp:
        reader = csv.reader(fp)
        for category in next(reader):
            images[category] = []
        for row in reader:
            for category, item in zip(images.keys(), row):
                if item:
                    images[category].append(item)

    version_str = f" (v{version})" if version else ""
    print(f"# Soul Knight Weapons{version_str}")

    for (category, w_value), (i_value) in zip(
        weapons.items(), images.values(),
    ):
        print(f"\n## {category}")
        for w_batch, i_batch in zip(
            batched(w_value, columns), batched(i_value, columns),
        ):
            while len(w_batch) < columns:
                w_batch += ("",)
                i_batch += ("",)
            print(f"\n|{'|'.join(w_batch)}|")
            print(f"|{'-|' * columns}")
            image_cells = [f"![image]({i})" if i else "" for i in i_batch]
            print(f"|{'|'.join(image_cells)}|")


if __name__ == "__main__":
    try:
        names = sys.argv[1]
        images = sys.argv[2]
        version = sys.argv[3] if len(sys.argv) >= 4 else None
        columns = int(sys.argv[4]) if len(sys.argv) >= 5 else 8
    except IndexError:
        print(
            f"Usage: python {sys.argv[0]} "
            "<path/to/weapons.csv> <path/to/images.csv> [version] [columns]"
        )
        sys.exit(1)

    main(names, images, version, columns)
